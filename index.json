[{"content":"Productivity shame is a feeling of inadequacy or guilt that arises when we believe we are not being productive enough. It\u0026rsquo;s essentially an internal pressure to constantly achieve and accomplish, often fueled by unrealistic expectations. In this post, we\u0026rsquo;ll learn more about it.\nUnderlying Causes  Here are some causes that can trigger feelings of not being more productive:\n1. Setting unrealistic expectations: We may set standards for ourselves that are impossible to attain, such as working around the clock or wanting to achieve perfection in everything that we do.\n2. Lack of boundaries: Blurring the lines between work and personal life can lead to constant feeling of needing to be productive, even during downtime. (Believe me, this is bad! ðŸ˜•)\n3. Social comparison: Comparing ourselves to others, especially on social media where everyone showcases their most productive moments, can trigger feelings of inadequacy.\nHow to know if you\u0026rsquo;re experiencing productivity shame?  Understanding the causes is important, but do you know if you\u0026rsquo;re experiencing producitivity shame?\n Do you struggle to take breaks or disconnect from work, even when you\u0026rsquo;re not actively working? Do you find yourself working late into the night or sacrificing sleep to get things done? Have you noticed changes in your eating or sleep habits due to stress and anxiety about productivity? Do you find yourself constantly criticizing your accomplishments and focusing on what you haven\u0026rsquo;t done? Do you avoid social activities or hobbies because you feel guilty about not being productive enough?  By reflecting on these questions, you can gain a better understanding of whether productivity shame might be at play. Unfortunately, my answer to all the above questions was \u0026ldquo;Yes\u0026rdquo;. I was never satisfied; and the guilt degraded my confidence in every meeitng at work.\nBreaking free from the feeling  Here are some ways to overcome the feeling of productivity shame:\n Define realistic goals: Set achievable goals that align with your needs and capabilities, not just societal expectations. Embrace imperfection: Accept that everyone has limitations and it\u0026rsquo;s okay not to be productive all the time. Focus on progress, not perfection: Celebrate small wins and incremental progress rather than fixating on reaching the \u0026ldquo;perfect\u0026rdquo; level of productivity. Set boundaries: Create clear boundaries between work and personal life and prioritize self-care to avoid burnout. Disconnect from social comparison: Limit your exposure to curated online spaces and focus on your own journey. Practice self-compassion: Be kind to yourself and acknowledge your efforts, even when things don\u0026rsquo;t go as planned.  Did I overcome it?  Well, as of this day, no, I haven\u0026rsquo;t! You might wonder, \u0026ldquo;then what\u0026rsquo;s the point?\u0026rdquo;. To me, discovering that such a thing exists was an eye-opener. Feeling overwhelmed and ashamed can lead to burnout and decreased motivation to work, creating a vicious cycle. Sadly, I have been trapped in this cycle for a very long time.\nNow that I understand it, I\u0026rsquo;ll know it the next time when I feel guilty about being less productive, and try to address the real problem. And trust me it is not a goal, it\u0026rsquo;s a process. I hope this post is helpful to you!\nKeep grinding! ðŸ’ª  ","date":"Jul 20, 2023","permalink":"/posts/productivity/what-is-productivity-shame/","section":"Posts","summary":"In this post, we\u0026rsquo;ll learn about productivity shame and ways to overcome it.","title":"What is Productivity Shame?"},{"content":"There are situations in which a listview might seem to have too much of information. So I have built a custom list view component which is the customized version of the standard list view aura component.\n   As shown in the image, the minimal list view removes most of the elements from the standard list view. It has a custom title, and an option to reset the width of the columns if altered by the user.\nNow let\u0026rsquo;s jump to the coding part. If you already know how to create aura components in VS code, you can proceed with creating one and skip to this section.\nCreating an Aura Component     Ensure whether you have installed Salesforce recommended extensions in VS Code and you are connected to an org.   Press Ctrl + Shift + P and type aura Choose SFDX: Create Aura Component Provide your desired filename (minimalListViewAura in this post) and press Enter Provide the desired directory or just press Enter again Now the Aura component has been successfully created and ready to be built and customized.  Building the Minimal list view component  Copy the code into the corresponding files.\nminimalListViewAura.cmp\n\u0026lt;aura:component implements=\u0026#34;flexipage:availableForAllPageTypes\u0026#34; access=\u0026#34;global\u0026#34;\u0026gt; \u0026lt;aura:attribute name=\u0026#34;object\u0026#34; type=\u0026#34;String\u0026#34; default=\u0026#34;Account\u0026#34; /\u0026gt; \u0026lt;aura:attribute name=\u0026#34;listName\u0026#34; type=\u0026#34;String\u0026#34; default=\u0026#34;Recent\u0026#34; /\u0026gt; \u0026lt;aura:attribute name=\u0026#34;listTitle\u0026#34; type=\u0026#34;String\u0026#34; default=\u0026#34;Recent Accounts\u0026#34; /\u0026gt; \u0026lt;aura:attribute name=\u0026#34;rows\u0026#34; type=\u0026#34;Integer\u0026#34; default=\u0026#34;5\u0026#34;/\u0026gt; \u0026lt;div style=\u0026#34;position: relative;\u0026#34;\u0026gt; \u0026lt;h2 id=\u0026#34;custom-list-title\u0026#34;\u0026gt;{!v.listTitle}\u0026lt;/h2\u0026gt; \u0026lt;lightning:listView objectApiName=\u0026#34;{!v.object}\u0026#34; listName=\u0026#34;{!v.listName}\u0026#34; rows=\u0026#34;{!v.rows}\u0026#34; showSearchBar=\u0026#34;false\u0026#34; showActionBar=\u0026#34;false\u0026#34; enableInlineEdit=\u0026#34;false\u0026#34; showRowLevelActions=\u0026#34;false\u0026#34; /\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/aura:component\u0026gt;  minimalListViewAura.css\n.THIS .infinite-loading, .THIS force-list-view-manager-status-info, .THIS force-list-view-manager-button-bar, .THIS .forceListViewSettingsMenu .slds-dropdown__header, .THIS .firstHeaderRow { display: none; } .THIS .errorColumnHeader, .THIS .errorColumn { display: none; } .THIS .forceListViewSettingsMenu { position: absolute; top: 5px; right: 10px; } .THIS .forceListViewSettingsMenu button { height: 27px; width: 35px; } .THIS #custom-list-title { position: absolute; top: 7px; left: 10px; z-index: 10; font-size: large; font-weight: bold; } That\u0026rsquo;s it! The minimal list view component is ready to be deployed to org.\n Right click on the component folder and choose SFDX: Deploy Source to Org After successful deployment, open the Org in Salesforce and on the desired app page, click on Edit Page option in the Gear icon at the right top of the page. As soon as the Lightning App Builder view has loaded, search for the component(minimalListViewAura) which we just deployed Drag and drop the component to the app page. The component fetches recently viewed accounts from Account object and displays the top 5 rows by default.     Using Minimal list view inside another aura component  The component which we now created can be injected into other aura components and reused for listviews in other objects. For example, if you want to view My Opportunities as a minimal list view inside another aura component, insert the following code at the desired section inside your component.\n\u0026lt;c:minimalListViewAura object=\u0026#34;Opportunity\u0026#34; listName=\u0026#34;MyOpportunities\u0026#34; listTitle=\u0026#34;My Opportunities\u0026#34; rows=\u0026#34;7\u0026#34; /\u0026gt;       Visit the Salesforce Lightning Component Library to know more about Aura components and Lightning Web Components.  ","date":"Apr 03, 2022","permalink":"/posts/salesforce/minimal-list-view/","section":"Posts","summary":"","title":"Minimal List View using Aura Components in Salesforce"},{"content":" Open Terminal using Ctrl + Alt + T or from the app launcher Navigate to the directory /usr/share/X11/xkb/symbols  cd /usr/share/X11/xkb/symbols  Edit the file named pc as an administrator or root user  sudo gedit pc  Identify the two keys which you want to swap.     Note: You can only swap two keys here. You cannot assign same functionality to both the keys.  In my case, I have to swap the Right Control key and Right Shift key.\nNow you can either log out and login or restart the shell by pressing Alt+F2 and running the restart command.\nThats it! You have remapped your keyboard keys successfully ðŸŽ‰\n","date":"Sep 20, 2021","permalink":"/posts/ubuntu/remap-keys/","section":"Posts","summary":"In this post, I\u0026rsquo;ll share the steps to swap the functionalities of two keys on a keyboard in Ubuntu","title":"Remap Keys in Ubuntu [20.04]"},{"content":"Create a react app\nnpm init react-app {react-app-name} Create an empty repository in GitHub with the same name of the react app.\ngit remote add origin https://github.com/{github-username}/{repo-name}    Note: Replace {github-username} with your GitHub username and {repo-name} with your repository name.  Install gh-pages package and save it as a dev dependency.\nnpm install gh-pages --save-dev In package.json, add this line\nhomepage: \u0026#34;https://{github-username}.github.io/{repository-name}\u0026#34;, Under scripts, add these two lines\n\u0026#34;predeploy\u0026#34;: \u0026#34;npm run build\u0026#34;, \u0026#34;deploy\u0026#34;: \u0026#34;gh-pages -d build\u0026#34;, Push all your code to the remote GitHub repository.\nNow, run this command\nnpm run deploy On the browser, go to â†’ https://{github-username}.github.io/{repository-name}\nYay!!! Our react app is published using GitHub Pages! ðŸŽ‰\n","date":"Aug 03, 2021","permalink":"/posts/react-js/deploy-gh-pages/","section":"Posts","summary":"In this post, I\u0026rsquo;ll share the steps to be followed to deploy a react app to github pages.","title":"Deploying React App to GitHub Pages"}]